import com.bmuschko.gradle.docker.tasks.image.*

buildscript {
	ext {
		springBootVersion = '1.5.9.RELEASE'
		springKafkaVersion = '1.3.1.RELEASE'
	}
	repositories {
		mavenLocal()
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'com.bmuschko:gradle-docker-plugin:3.0.11'
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.bmuschko.docker-remote-api'

group = 'com.github.dddpaul.kafka'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.9

repositories {
	mavenLocal()
	jcenter()
	mavenCentral()
}

dependencies {
	compile('org.springframework.kafka:spring-kafka')
	compile("org.springframework.kafka:spring-kafka:${springKafkaVersion}")
	compile('org.springframework.boot:spring-boot-starter')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

task wrapper(type: Wrapper) {
	gradleVersion = '4.1'
	distributionUrl = 'https://services.gradle.org/distributions/gradle-4.2.1-all.zip'
}

task createDockerfile(type: Dockerfile) {
	dependsOn build
	destFile = project.file("${project.buildDir}/Dockerfile")
	from 'anapsix/alpine-java:9'
	addFile "libs/${project.name}-${project.version}.jar", '/app.jar'
	entryPoint 'java', '-Djava.security.egd=file:/dev/./urandom', '-jar', '/app.jar'
}

task buildDockerImage(type: DockerBuildImage) {
	dependsOn createDockerfile
	inputDir = createDockerfile.destFile.parentFile
	tag = "dddpaul/${project.name}"
}
